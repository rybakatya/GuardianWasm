@code {
    [Parameter]
    public string? StyleClass { get; set; }

    [Parameter]
    public string Question { get; set; } = string.Empty;

    [Parameter]
    public List<string> Options { get; set; } = new List<string>();

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> OnOptionSelected { get; set; }

    private int currentChoice;

    protected override void OnInitialized()
    {
        currentChoice = Value; // Initialize current choice with the provided Value parameter
    }

    private async Task SelectOption(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int index) && currentChoice != index)
        {
            currentChoice = index;
            await OnOptionSelected.InvokeAsync(index);
        }
    }
}

<div class="quiz-container">
    <p class="@StyleClass">@Question</p>
    <div>
        @for (int i = 0; i < Options.Count; i++)
        {
            <label class="@StyleClass">
                <input type="radio"
                       name="@($"quiz-options-{Question}-{i}")" 
                       value="@i"
                       @onchange="SelectOption"
                       checked="@(currentChoice == i)" />
                @Options[i]
            </label>
        }
    </div>
</div>
